// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektBerga.Server.Data;

namespace ProjektBerga.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220814111501_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjektBerga.Shared.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "aperture",
                            Name = "Grafičke kartice",
                            Url = "Grafičke kartice"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "aperture",
                            Name = "Mobiteli",
                            Url = "Mobiteli"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "aperture",
                            Name = "Slušalice",
                            Url = "Slušalice"
                        });
                });

            modelBuilder.Entity("ProjektBerga.Shared.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal (18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal (18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DateCreated = new DateTime(2022, 8, 14, 13, 15, 0, 672, DateTimeKind.Local).AddTicks(191),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " 2GB RAM",
                            Image = "https://www.hgspot.hr/image/cachewebp/catalog/slike/145204-878-640x480.webp",
                            IsDeleted = false,
                            IsPublic = false,
                            OriginalPrice = 3500m,
                            Price = 2500m,
                            Title = "XFX AMD Radeon RX 550"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DateCreated = new DateTime(2022, 8, 14, 13, 15, 0, 678, DateTimeKind.Local).AddTicks(6526),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " 2GB RAM",
                            Image = "https://www.instar-informatika.hr/slike/velike/11268-21-20g.jpg",
                            IsDeleted = false,
                            IsPublic = false,
                            OriginalPrice = 3500m,
                            Price = 2500m,
                            Title = "Sapphire Pulse AMD Radeon RX 550"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            DateCreated = new DateTime(2022, 8, 14, 13, 15, 0, 678, DateTimeKind.Local).AddTicks(6595),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " 5G, 256 GB/12 GB,12MP+12MP+12MP/4MP",
                            Image = "https://www.hgspot.hr/image/catalog/slike/167318-878.jpg",
                            IsDeleted = false,
                            IsPublic = false,
                            OriginalPrice = 12000m,
                            Price = 10000m,
                            Title = "Samsung Galaxy Z Fold 3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            DateCreated = new DateTime(2022, 8, 14, 13, 15, 0, 678, DateTimeKind.Local).AddTicks(6605),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "5G,128GB, Midnight",
                            Image = "https://www.hgspot.hr/image/catalog/slike/162633-878.jpg ",
                            IsDeleted = false,
                            IsPublic = false,
                            OriginalPrice = 6500m,
                            Price = 4500m,
                            Title = "Apple iPhone 13 Mini"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            DateCreated = new DateTime(2022, 8, 14, 13, 15, 0, 678, DateTimeKind.Local).AddTicks(6611),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DRIVERS 40 mm,DRIVER TYPE Dynamic,DRIVER IMPEDANCE 32 OHM,DRIVER SENSITIVITY 97 dB SPL,FREQUENCY RESPONSE 20Hz-20kHz ",
                            Image = "https://www.hgspot.hr/image/catalog/slike/126934-878.jpg ",
                            IsDeleted = false,
                            IsPublic = false,
                            OriginalPrice = 1500m,
                            Price = 1200m,
                            Title = "Slušalice + mikrofon MARSHALL Major III "
                        });
                });

            modelBuilder.Entity("ProjektBerga.Shared.Product", b =>
                {
                    b.HasOne("ProjektBerga.Shared.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProjektBerga.Shared.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
